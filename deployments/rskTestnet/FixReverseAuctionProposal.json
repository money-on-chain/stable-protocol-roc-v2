{
  "address": "0xd50C22176E54B159D5F2ecDb8C5B0BAE4da1Dd87",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IMocCARC20",
          "name": "rocCoreProxy_",
          "type": "address"
        },
        {
          "internalType": "contract IMoCState",
          "name": "mocMocStateProxy_",
          "type": "address"
        },
        {
          "internalType": "contract IUpgradeDelegator",
          "name": "upgradeDelegator_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "mocFeeTokenPriceProvider_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "rocFeeTokenPriceProvider_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "revAucBTC2MOCProxy_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "revAucBTC2MOCNewImplement_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "execute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mocFeeTokenPriceProvider",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mocMocStateProxy",
      "outputs": [
        {
          "internalType": "contract IMoCState",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "revAucBTC2MOCNewImplement",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "revAucBTC2MOCProxy",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rocCoreProxy",
      "outputs": [
        {
          "internalType": "contract IMocCARC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rocFeeTokenPriceProvider",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "upgradeDelegator",
      "outputs": [
        {
          "internalType": "contract IUpgradeDelegator",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x357713c5b81772f2df81589df16bc4dfa7088a8c18fe898e0e69faa2c988c85c",
  "receipt": {
    "to": null,
    "from": "0xCD8A1c9aCc980ae031456573e34dC05cD7daE6e3",
    "contractAddress": "0xd50C22176E54B159D5F2ecDb8C5B0BAE4da1Dd87",
    "transactionIndex": 0,
    "gasUsed": "341731",
    "logsBloom": "0x
    "blockHash": "0xfb96f99a913c2ecae56aa089def8bcf854df6e40000238fb398fcb3d96e2962b",
    "transactionHash": "0x357713c5b81772f2df81589df16bc4dfa7088a8c18fe898e0e69faa2c988c85c",
    "logs": [],
    "blockNumber": 5871854,
    "cumulativeGasUsed": "341731",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xa416934264515bb381E3b746f10f22D5c6f9431a",
    "0x0adb40132cB0ffcEf6ED81c26A1881e214100555",
    "0xa12a9A492eFEBf4E43B174A57886286dA5057B8D",
    "0x8DCE78BbD4D757EF7777Be113277cf5A35283b1E",
    "0x4F9724e78e7Cd521c879b6B9eE7D5b4e7df3cfbC",
    "0xb908E56e1f386d6F955569a687d5286F7e49A90F",
    "0xc2d83b071aC905c0083a4Be4547631Cf197Bcc28"
  ],
  "numDeployments": 1,
  "solcInputHash": "afe7e7ddbc6fc4974b034baad632e091",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IMocCARC20\",\"name\":\"rocCoreProxy_\",\"type\":\"address\"},{\"internalType\":\"contract IMoCState\",\"name\":\"mocMocStateProxy_\",\"type\":\"address\"},{\"internalType\":\"contract IUpgradeDelegator\",\"name\":\"upgradeDelegator_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"mocFeeTokenPriceProvider_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"rocFeeTokenPriceProvider_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"revAucBTC2MOCProxy_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"revAucBTC2MOCNewImplement_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mocFeeTokenPriceProvider\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mocMocStateProxy\",\"outputs\":[{\"internalType\":\"contract IMoCState\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"revAucBTC2MOCNewImplement\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"revAucBTC2MOCProxy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rocCoreProxy\",\"outputs\":[{\"internalType\":\"contract IMocCARC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rocFeeTokenPriceProvider\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"upgradeDelegator\",\"outputs\":[{\"internalType\":\"contract IUpgradeDelegator\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"mocFeeTokenPriceProvider_\":\"new Fee Token Price Provider address for MOC/USD\",\"mocMocStateProxy_\":\"MoCState proxy contract MOC V1\",\"revAucBTC2MOCNewImplement_\":\"Implementation of the RevAuction BTC2MOC\",\"revAucBTC2MOCProxy_\":\"Proxy of the RevAuction BTC2MOC\",\"rocCoreProxy_\":\"RoC Core proxy contract ROC V2\",\"rocFeeTokenPriceProvider_\":\"new Fee Token Price Provider address for MOC/RIF\",\"upgradeDelegator_\":\"Upgrade Delegator for OMOC\"}},\"execute()\":{\"details\":\"Should be called by the governor, but this contract does not check that explicitly because it is not its responsibility in the current architecture IMPORTANT: This function should not be overridden, you should only redefine _beforeUpgrade and _afterUpgrade methods to use this template\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"constructor\"},\"execute()\":{\"notice\":\"Execute the changes.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/changers/FixReverseAuctionProposal.sol\":\"FixReverseAuctionProposal\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul[j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTOtfDnca[r]Iulc]jmul[jul]VcTOculjmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/changers/FixReverseAuctionProposal.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.20;\\n\\nimport { IChangerContract } from \\\"../interfaces/IChangerContract.sol\\\";\\n\\n/**\\n  In this changer we change:\\n\\n  1) Upgrade new Implementation of RevAuction BTC2MOC\\n  2) Set nre Fee Token Price Provider address for MOC/USD\\n  3) Set new Fee Token Price Provider address for MOC/RIF\\n */\\n\\ninterface IMocCARC20 {\\n    function setFeeTokenPriceProviderAddress(address mocFeeTokenPriceProviderAddress_) external;\\n}\\n\\ninterface IMoCState {\\n    function setMoCPriceProvider(address mocProviderAddress_) external;\\n}\\n\\ninterface IUpgradeDelegator {\\n    function upgrade(address proxy_, address implementation_) external;\\n}\\n\\ncontract FixReverseAuctionProposal is IChangerContract {\\n    // ------- Storage -------\\n\\n    // MocCore proxy contract V2 - Project ROC\\n    IMocCARC20 public immutable rocCoreProxy;\\n    // MocState proxy contract V1 - Project MOC\\n    IMoCState public immutable mocMocStateProxy;\\n    // Upgrade Delegator for OMOC\\n    IUpgradeDelegator public immutable upgradeDelegator;\\n    // MoC Fee Token price provider\\n    address public mocFeeTokenPriceProvider;\\n    // RoC Fee Token price provider\\n    address public rocFeeTokenPriceProvider;\\n    // revAuction BTC2MOC proxy\\n    address public immutable revAucBTC2MOCProxy;\\n    // revAuction BTC2MOC new implementation\\n    address public immutable revAucBTC2MOCNewImplement;\\n\\n    /**\\n     * @notice constructor\\n     * @param rocCoreProxy_ RoC Core proxy contract ROC V2\\n     * @param mocMocStateProxy_ MoCState proxy contract MOC V1\\n     * @param upgradeDelegator_ Upgrade Delegator for OMOC\\n     * @param mocFeeTokenPriceProvider_ new Fee Token Price Provider address for MOC/USD\\n     * @param rocFeeTokenPriceProvider_ new Fee Token Price Provider address for MOC/RIF\\n     * @param revAucBTC2MOCProxy_ Proxy of the RevAuction BTC2MOC\\n     * @param revAucBTC2MOCNewImplement_ Implementation of the RevAuction BTC2MOC\\n     */\\n    constructor(\\n        IMocCARC20 rocCoreProxy_,\\n        IMoCState mocMocStateProxy_,\\n        IUpgradeDelegator upgradeDelegator_,\\n        address mocFeeTokenPriceProvider_,\\n        address rocFeeTokenPriceProvider_,\\n        address revAucBTC2MOCProxy_,\\n        address revAucBTC2MOCNewImplement_\\n    ) {\\n        rocCoreProxy = rocCoreProxy_;\\n        mocMocStateProxy = mocMocStateProxy_;\\n        upgradeDelegator = upgradeDelegator_;\\n        mocFeeTokenPriceProvider = mocFeeTokenPriceProvider_;\\n        rocFeeTokenPriceProvider = rocFeeTokenPriceProvider_;\\n        revAucBTC2MOCProxy = revAucBTC2MOCProxy_;\\n        revAucBTC2MOCNewImplement = revAucBTC2MOCNewImplement_;\\n    }\\n\\n    /**\\n      @notice Execute the changes.\\n      @dev Should be called by the governor, but this contract does not check that explicitly\\n      because it is not its responsibility in the current architecture\\n      IMPORTANT: This function should not be overridden, you should only redefine\\n      _beforeUpgrade and _afterUpgrade methods to use this template\\n    */\\n    function execute() external {\\n        _beforeUpgrade();\\n        _upgrade();\\n        _afterUpgrade();\\n    }\\n\\n    /**\\n      @notice Upgrade the proxy to the newImplementation\\n      @dev IMPORTANT: This function should not be overridden\\n    */\\n    function _upgrade() internal {\\n        upgradeDelegator.upgrade(revAucBTC2MOCProxy, revAucBTC2MOCNewImplement);\\n    }\\n\\n    /**\\n      @notice Intended to prepare the system for the upgrade\\n    */\\n    function _beforeUpgrade() internal view {}\\n\\n    /**\\n      @notice Intended to do the final tweaks after the upgrade, for example initialize the contract\\n    */\\n    function _afterUpgrade() internal {\\n        // Update MOC Fee Token Price Provider MOC/USD\\n        mocMocStateProxy.setMoCPriceProvider(mocFeeTokenPriceProvider);\\n        // Update ROC Fee Token Price Provider RIF/USD\\n        rocCoreProxy.setFeeTokenPriceProviderAddress(rocFeeTokenPriceProvider);\\n    }\\n}\\n\",\"keccak256\":\"0x58c0c9d449bb022857032cbe1afc5adebf3c0c1d8668ebab3b647317f642a0f0\",\"license\":\"UNLICENSED\"},\"contracts/interfaces/IChangerContract.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.20;\\n\\n/**\\n  @title IChangerContract\\n  @notice This interface is the one used by the governance system.\\n  @dev If you plan to do some changes to a system governed by this project you should write a contract\\n  that does those changes, like a recipe. This contract MUST not have ANY kind of public or external function\\n  that modifies the state of this ChangeContract, otherwise you could run into front-running issues when the governance\\n  system is fully in place.\\n */\\ninterface IChangerContract {\\n    /**\\n    @notice Override this function with a recipe of the changes to be done when this ChangeContract\\n    is executed\\n   */\\n    function execute() external;\\n}\\n\",\"keccak256\":\"0x2f30103bbdefcd63e9a98e7462ec95c54df9455fa086e789af0a0f6483daae79\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x6101203461012f57601f6105c538819003918201601f19168301916001600160401b038311848410176101345780849260e09460405283398101031261012f578051906001600160a01b03808316830361012f57602082015190808216820361012f57604083015191818316830361012f5761007d6060850161014a565b9261008a6080860161014a565b916100a360c061009c60a0890161014a565b970161014a565b9660805260a05260c0528160018060a01b031993168360005416176000551690600154161760015560e052610100908152604051610466918261015f833960805182818161014001526102c9015260a05182818160ba015261026e015260c0518281816101cf01526103c9015260e05182818160fd015261020e01525181818161018301526102360152f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b038216820361012f5756fe60806040818152600436101561001457600080fd5b600091823560e01c90816333d2e956146103b55750806344f060641461038d5782816361461954146101b257508063615a36f71461016f5780637e00ac851461012c5780638def2334146100e9578063bf694775146100a65763f2dd01521461007c57600080fd5b346100a257816003193601126100a257905490516001600160a01b039091168152602090f35b5080fd5b50346100a257816003193601126100a257517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b50346100a257816003193601126100a257517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b50346100a257816003193601126100a257517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b50346100a257816003193601126100a257517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b80833461038a578160031936011261038a576001600160a01b03907f00000000000000000000000000000000000000000000000000000000000000008216803b1561033f578390604483518097819363266a23b160e21b8352877f0000000000000000000000000000000000000000000000000000000000000000166004840152877f00000000000000000000000000000000000000000000000000000000000000001660248401525af180156103805761036b575b829350817f00000000000000000000000000000000000000000000000000000000000000001682845416813b15610367578491602483928551948593849262aeeb1160e61b845260048401525af1801561035d57908491610344575b5050817f0000000000000000000000000000000000000000000000000000000000000000169160015416823b1561033f5783926024849284519586938492630f1e5e2b60e01b845260048401525af190811561033657506103225750f35b8161032c916103f8565b6103335780f35b80fd5b513d84823e3d90fd5b505050fd5b8161034e916103f8565b6103595782856102c4565b5050fd5b82513d86823e3d90fd5b8480fd5b91909281610378916103f8565b908290610268565b81513d85823e3d90fd5b50fd5b50346100a257816003193601126100a25760015490516001600160a01b039091168152602090f35b8390346100a257816003193601126100a2577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b90601f8019910116810190811067ffffffffffffffff82111761041a57604052565b634e487b7160e01b600052604160045260246000fdfea26469706673582212204a4c68cb600ec345fb17a8a325540514dceca74f1528d58f44df58701be1f49264736f6c63430008140033",
  "deployedBytecode": "0x60806040818152600436101561001457600080fd5b600091823560e01c90816333d2e956146103b55750806344f060641461038d5782816361461954146101b257508063615a36f71461016f5780637e00ac851461012c5780638def2334146100e9578063bf694775146100a65763f2dd01521461007c57600080fd5b346100a257816003193601126100a257905490516001600160a01b039091168152602090f35b5080fd5b50346100a257816003193601126100a257517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b50346100a257816003193601126100a257517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b50346100a257816003193601126100a257517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b50346100a257816003193601126100a257517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b80833461038a578160031936011261038a576001600160a01b03907f00000000000000000000000000000000000000000000000000000000000000008216803b1561033f578390604483518097819363266a23b160e21b8352877f0000000000000000000000000000000000000000000000000000000000000000166004840152877f00000000000000000000000000000000000000000000000000000000000000001660248401525af180156103805761036b575b829350817f00000000000000000000000000000000000000000000000000000000000000001682845416813b15610367578491602483928551948593849262aeeb1160e61b845260048401525af1801561035d57908491610344575b5050817f0000000000000000000000000000000000000000000000000000000000000000169160015416823b1561033f5783926024849284519586938492630f1e5e2b60e01b845260048401525af190811561033657506103225750f35b8161032c916103f8565b6103335780f35b80fd5b513d84823e3d90fd5b505050fd5b8161034e916103f8565b6103595782856102c4565b5050fd5b82513d86823e3d90fd5b8480fd5b91909281610378916103f8565b908290610268565b81513d85823e3d90fd5b50fd5b50346100a257816003193601126100a25760015490516001600160a01b039091168152602090f35b8390346100a257816003193601126100a2577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b90601f8019910116810190811067ffffffffffffffff82111761041a57604052565b634e487b7160e01b600052604160045260246000fdfea26469706673582212204a4c68cb600ec345fb17a8a325540514dceca74f1528d58f44df58701be1f49264736f6c63430008140033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "constructor": {
        "params": {
          "mocFeeTokenPriceProvider_": "new Fee Token Price Provider address for MOC/USD",
          "mocMocStateProxy_": "MoCState proxy contract MOC V1",
          "revAucBTC2MOCNewImplement_": "Implementation of the RevAuction BTC2MOC",
          "revAucBTC2MOCProxy_": "Proxy of the RevAuction BTC2MOC",
          "rocCoreProxy_": "RoC Core proxy contract ROC V2",
          "rocFeeTokenPriceProvider_": "new Fee Token Price Provider address for MOC/RIF",
          "upgradeDelegator_": "Upgrade Delegator for OMOC"
        }
      },
      "execute()": {
        "details": "Should be called by the governor, but this contract does not check that explicitly because it is not its responsibility in the current architecture IMPORTANT: This function should not be overridden, you should only redefine _beforeUpgrade and _afterUpgrade methods to use this template"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "constructor": {
        "notice": "constructor"
      },
      "execute()": {
        "notice": "Execute the changes."
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7569,
        "contract": "contracts/changers/FixReverseAuctionProposal.sol:FixReverseAuctionProposal",
        "label": "mocFeeTokenPriceProvider",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 7571,
        "contract": "contracts/changers/FixReverseAuctionProposal.sol:FixReverseAuctionProposal",
        "label": "rocFeeTokenPriceProvider",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      }
    }
  }
}